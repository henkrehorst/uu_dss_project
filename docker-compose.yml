version: '3'
services:
    jupyter_project:
        build:
            context: .
            dockerfile: notebook/Dockerfile_notebook
        ports:
            - 8888:8888
        volumes:
            - ./notebook:/notebook
            - ./data:/data
        environment:
            - JUPYTER_ENABLE_LAB=yes
            - NB_USER=infomdss
            - CHOWN_HOME=yes
        working_dir: /notebook
    
    db_dashboard_project:
        image: postgres
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=student
            - POSTGRES_PASSWORD=infomdss
            - POSTGRES_DB=dashboard
        volumes:
            - db_dashboard-data:/var/lib/postgresql/data/
        container_name: db_dashboard_project
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
            interval: 3s
            timeout: 60s
            retries: 10
            start_period: 80s

    react_frontend_dashboard:
        build:
            context: ./dashboard/frontend
            dockerfile: Dockerfile_dashboard_frontend
            args:
                VITE_BACKEND_BASE_URL: http://127.0.0.1:8083
        ports:
            - "8084:80"
        depends_on:
            db_dashboard_project:
                condition: service_healthy
    flask_backend_dashboard:
        build:
            context: ./dashboard/backend
            dockerfile: Dockerfile_dashboard_backend
        ports:
            - "8083:5000"
        volumes:
            - ./data:/data
        environment:
            - NAME=Flask-App
            - PYTHONPATH=/app
            - DATABASE_URL=postgresql://student:infomdss@db_dashboard_project:5432/dashboard
        working_dir: /app
        depends_on:
            db_dashboard_project:
                condition: service_healthy

volumes:
    db_dashboard-data:
